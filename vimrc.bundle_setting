"------------------------------------
" neocomplcache 
"------------------------------------
let g:neocomplcache_enable_at_startup = 1 " 起動時に有効化

"------------------------------------
"powerline
"------------------------------------
let g:Powerline_symbols = 'fancy'

"------------------------------------
" NERDTree
"------------------------------------
" 引数なしで実行したとき、NERDTreeを実行する
"let file_name = expand("%:p")
"if has('vim_starting') &&  file_name == ""
"    autocmd VimEnter * call ExecuteNERDTree()
"endif

" カーソルが外れているときは自動的にnerdtreeを隠す
function! ExecuteNERDTree()
    "b:nerdstatus = 1 : NERDTree 表示中
    "b:nerdstatus = 2 : NERDTree 非表示中

    if !exists('g:nerdstatus')
        execute 'NERDTree ./'
        let g:windowWidth = winwidth(winnr())
        let g:nerdtreebuf = bufnr('')
        let g:nerdstatus = 1 

    elseif g:nerdstatus == 1 
        execute 'wincmd t'
        execute 'vertical resize' 0 
        execute 'wincmd p'
        let g:nerdstatus = 2 
    elseif g:nerdstatus == 2 
        execute 'wincmd t'
        execute 'vertical resize' g:windowWidth
        let g:nerdstatus = 1 

    endif
endfunction
noremap <c-e> :<c-u>:call ExecuteNERDTree()<cr>

"------------------------------------
" unite.vim
"------------------------------------
" unite prefix key.
nnoremap [unite] <Nop>
nmap <C-u> [unite]
" 入力モードで開始する
let g:unite_enable_start_insert=1
" 最近開いたファイル履歴の保存数
let g:unite_source_file_mru_limit = 50
"file_mruの表示フォーマットを指定。空にすると表示スピードが高速化される
let g:unite_source_file_mru_filename_format = ''

" 全部
nnoremap <silent> [unite]<C-u> :<C-u>Unite -buffer-name=files buffer file_mru bookmark file<CR>
" カレントディレクトリ配下のファイル
nnoremap <silent> [unite]<C-f> :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
"バッファ一覧
nnoremap <silent> [unite]<C-b> :<C-u>Unite buffer<CR>
""レジスタ一覧
nnoremap <silent> [unite]<C-r> :<C-u>Unite -buffer-name=register register<CR>
"最近使用したファイル一覧
nnoremap <silent> [unite]<C-m> :<C-u>Unite file_mru<CR>
"ブックマーク一覧
nnoremap <silent> [unite]<C-l> :<C-u>Unite bookmark<CR>
"ブックマークに追加
nnoremap <silent> [unite]<C-a> :<C-u>UniteBookmarkAdd<CR>
"uniteを開いている間のキーマッピング
autocmd FileType unite call s:unite_my_settings()
function! s:unite_my_settings()"{{{
      "ESCでuniteを終了
      nmap <buffer> <ESC> <Plug>(unite_exit)
      nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
      inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>
      "入力モードのときjjでノーマルモードに移動
      imap <buffer> jj <Plug>(unite_insert_leave)
      "入力モードのときctrl+wでバックスラッシュも削除
      imap <buffer> <C-w> <Plug>(unite_delete_backward_path)
      "ctrl+jで縦に分割して開く
      nnoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
      inoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
      "ctrl+jで横に分割して開く
      nnoremap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
      inoremap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
      "ctrl+oでその場所に開く
      nnoremap <silent> <buffer> <expr> <C-o> unite#do_action('open')
      inoremap <silent> <buffer> <expr> <C-o> unite#do_action('open')
endfunction"}}}

